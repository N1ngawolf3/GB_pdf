from random import randint
import re

#Easy
# Все задачи текущего блока решите с помощью генераторов списков!

# Задание-1:
# Дан список, заполненный произвольными целыми числами.
# Получить новый список, элементы которого будут
# квадратами элементов исходного списка
# [1, 2, 4, 0] --> [1, 4, 16, 0]

def Easy_first_task():
    mlist = [randint(-10,10) for _ in range(10)]
    sqlist = [el*el for el in mlist]
    print(*mlist)
    print(*sqlist)


# Задание-2:
# Даны два списка фруктов.
# Получить список фруктов, присутствующих в обоих исходных списках.

def Easy_second_task():
    list1 = ['яблоко','груша','банан']
    list2 = ['яблоко','банан']
    list_comb = [fruit for fruit in list1 if fruit in list2]
    print(list_comb)

# Задание-3:
# Дан список, заполненный произвольными числами.
# Получить список из элементов исходного, удовлетворяющих следующим условиям:
# + Элемент кратен 3
# + Элемент положительный
# + Элемент не кратен 4

def Easy_third_task():
    mlist = [randint(-10,10) for _ in range(10)]
    newlist = [el for el in mlist if (el%3==0) and (el>0) and (el%4!=0)]
    print(mlist)
    print(newlist)


#Normal
# Эти задачи необходимо решить используя регулярные выражения!

# Задача - 1
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки,
# имя и фамилия должны иметь заглавные первые буквы.
# email - не должен иметь заглавных букв и должен быть в формате: текст в нижнем регистре,
# допускается нижнее подчеркивание и цифры, потом @, потом текст, допускаются цифры, точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email
# (спецсимвол, заглавная буква, .net), te_4_st@test.com - верно указан.

def Normal_first_task():
    name = input('Введите имя: ')
    surname = input('Введите фамилию: ')
    email = input('Введите почту: ')
    



if __name__ == '__main__':
    Normal_first_task()
